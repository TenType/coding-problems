from solution import solution

def test_no_win_empty():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    ```
    """
    assert not solution(0)

def test_no_win_first_move():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 1 0 0 0
    ```
    """
    board = 0b_0000000_0000000_0000000_0000001_0000000_0000000_0000000
    assert not solution(board)

def test_no_win_almost():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 1 1 1 0
    0 0 1 1 1 0 0
    0 1 0 1 0 1 0
    ```
    """
    board = 0b_0000000_0000101_0000110_0000111_0000010_0000001_0000000
    assert not solution(board)

def test_no_win_border_1():
    """
    ```
    . . . . . . .
    1 1 1 0 1 1 1
    1 1 1 0 1 1 1
    1 1 1 0 1 1 1
    0 0 0 0 0 0 0
    1 1 1 0 1 1 1
    1 1 1 0 1 1 1
    ```
    """
    board = 0b_0111011_0111011_0111011_0000000_0111011_0111011_0111011
    assert not solution(board)

def test_no_win_border_2():
    """
    ```
    . . . . . . .
    0 1 1 1 0 1 1
    1 1 1 0 1 1 0
    1 1 0 0 1 0 0
    0 0 1 0 0 1 1
    0 1 1 0 1 1 1
    1 1 0 1 1 1 0
    ```
    """
    board = 0b_0100110_0110111_0011011_0100001_0110110_0111011_0011001
    assert not solution(board)

def test_win_horizontal_left():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    1 1 1 1 0 0 0
    ```
    """
    board = 0b_0000000_0000000_0000000_0000001_0000001_0000001_0000001
    assert solution(board)

def test_win_horizontal_right():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 1 1 1 1
    ```
    """
    board = 0b_0000001_0000001_0000001_0000001_0000000_0000000_0000000
    assert solution(board)

def test_win_vertical_left():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    1 0 0 0 0 0 0
    1 0 0 0 0 0 0
    1 0 0 0 0 0 0
    1 0 0 0 0 0 0
    ```
    """
    board = 0b_0000000_0000000_0000000_0000000_0000000_0000000_0001111
    assert solution(board)

def test_win_vertical_right():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 1
    0 0 0 0 0 0 1
    0 0 0 0 0 0 1
    0 0 0 0 0 0 1
    ```
    """
    board = 0b_0001111_0000000_0000000_0000000_0000000_0000000_0000000
    assert solution(board)

def test_win_ascending_diagonal_left():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 1 0 0 0
    0 0 1 0 0 0 0
    0 1 0 0 0 0 0
    1 0 0 0 0 0 0
    ```
    """
    board = 0b_0000000_0000000_0000000_0001000_0000100_0000010_0000001
    assert solution(board)

def test_win_ascending_diagonal_right():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 1
    0 0 0 0 0 1 0
    0 0 0 0 1 0 0
    0 0 0 1 0 0 0
    ```
    """
    board = 0b_0001000_0000100_0000010_0000001_0000000_0000000_0000000
    assert solution(board)

def test_win_descending_diagonal_left():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    1 0 0 0 0 0 0
    0 1 0 0 0 0 0
    0 0 1 0 0 0 0
    0 0 0 1 0 0 0
    ```
    """
    board = 0b_0000000_0000000_0000000_0000001_0000010_0000100_0001000
    assert solution(board)

def test_win_descending_diagonal_right():
    """
    ```
    . . . . . . .
    0 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 1 0 0 0
    0 0 0 0 1 0 0
    0 0 0 0 0 1 0
    0 0 0 0 0 0 1
    ```
    """
    board = 0b_0000001_0000010_0000100_0001000_0000000_0000000_0000000
    assert solution(board)

def test_win_all():
    """
    ```
    . . . . . . .
    1 1 1 1 1 1 1
    1 1 1 1 1 1 1
    1 1 1 1 1 1 1
    1 1 1 1 1 1 1
    1 1 1 1 1 1 1
    1 1 1 1 1 1 1
    ```
    """
    board = 0b_0111111_0111111_0111111_0111111_0111111_0111111_0111111
    assert solution(board)


